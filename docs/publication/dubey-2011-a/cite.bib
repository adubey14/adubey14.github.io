@inproceedings{Dubey2011a,
 abstract = {Complexity of software systems has reached the point where we need run-time mechanisms that can be used to provide fault management services. Testing and verification may not cover all possible scenarios that a system will encounter, hence a simpler, yet formally specified run-time monitoring, diagnosis, and fault mitigation architecture is needed to increase the software system's dependability. The approach described in this paper borrows concepts and principles from the field of “Systems Health Management” for complex systems and implements a two level health management strategy that can be applied through a model-based software development process. The Component-level Health Manager (CLHM) for software components provides a localized and limited functionality for managing the health of a component locally. It also reports to the higher-level System Health Manager (SHM) which manages the health of the overall system. SHM consists of a diagnosis engine that uses the timed fault propagation (TFPG) model based on the component assembly. It reasons about the anomalies reported by CLHM and hypothesizes about the possible fault sources. Thereafter, necessary system level mitigation action can be taken. System-level mitigation approaches are subject of on-going investigations and have not been included in this paper. We conclude the paper with case study and discussion.},
 author = {Abhishek Dubey and G. Karsai and N. Mahadevan},
 booktitle = {2011 Aerospace Conference},
 category = {conference},
 doi = {10.1109/AERO.2011.5747559},
 file = {:Dubey2011a-Model-based_software_health_management_for_real-time_systems.pdf:PDF},
 issn = {1095-323X},
 keywords = {},
 month = {March},
 oldkeywords = {performance, reliability},
 pages = {1-18},
 tag = {platform},
 title = {Model-based software health management for real-time systems},
 year = {2011}
}
