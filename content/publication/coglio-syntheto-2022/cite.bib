@article{coglio_syntheto_2022,
 abstract = {Syntheto is a surface language for carrying out formally verified program synthesis by transformational refinement in ACL2 using the APT toolkit. Syntheto aims at providing more familiarity and automation, in order to make this technology more widely usable. Syntheto is a strongly statically typed functional language that includes both executable and non-executable constructs, including facilities to state and prove theorems and facilities to apply proof-generating transformations. Syntheto is integrated into an IDE with a notebook-style, interactive interface that translates Syntheto to ACL2 definitions and APT transformation invocations, and back-translates the prover's results to Syntheto; the bidirectional translation happens behind the scenes, with the user interacting solely with Syntheto.},
 author = {Coglio, Alessandro and McCarthy, Eric and Westfold, Stephen and Balasubramanian, Daniel and Dubey, Abhishek and Karsai, Gabor},
 doi = {10.4204/eptcs.359.13},
 journal = {Electronic Proceedings in Theoretical Computer Science},
 month = {May},
 note = {Publisher: Open Publishing Association},
 pages = {151--167},
 title = {Syntheto: A Surface Language for APT and ACL2},
 url = {https://doi.org/10.4204%2Feptcs.359.13},
 volume = {359},
 year = {2022}
}
